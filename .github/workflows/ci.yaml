name: CI

on:
  push:
    branches: [master]
    tags: ['v*.*.*']

jobs:
  test:
    name: Test
    uses: daniil-berg/reusable-workflows/.github/workflows/python-test.yaml@v0.2.2
    with:
      versions: '["3.8", "3.9", "3.10", "3.11"]'
      unittest-command: 'scripts/test.sh'
      coverage-command: 'scripts/cov.sh'
      unittest-requirements: "-e '.[dev]'"
      typecheck-command: 'scripts/typecheck.sh'
      typecheck-requirements: '-Ur requirements/dev.txt'
      typecheck-all-versions: true
      lint-command: 'scripts/lint.sh'
      lint-requirements: '-Ur requirements/dev.txt'

  release:
    name: Release
    if: ${{ github.ref_type == 'tag' }}
    needs: test
    uses: daniil-berg/reusable-workflows/.github/workflows/python-release.yaml@v0.2.2
    with:
      git-ref: ${{ github.ref_name }}
    secrets:
      release-token: ${{ secrets.TOKEN_GITHUB_CREATE_RELEASE }}
      publish-token: ${{ secrets.TOKEN_PYPI_PROJECT }}
    permissions:
      contents: write

  update_badges:
    needs: test
    name: Update Badges
    env:
      meta_gist_id: 3f8240a976e8781a765d9c74a583dcda
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download `cloc`
        run: sudo apt-get update -y && sudo apt-get install -y cloc

      - name: Count lines of code/comments
        run: |
          echo "cloc_code=$(./scripts/cloc.sh -c src/)" >> $GITHUB_ENV
          echo "cloc_comments=$(./scripts/cloc.sh -m src/)" >> $GITHUB_ENV
          echo "cloc_commentpercent=$(./scripts/cloc.sh -p src/)" >> $GITHUB_ENV

      - name: Create badge for lines of code
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_META_DATA }}
          gistID: ${{ env.meta_gist_id }}
          filename: cloc-code.json
          label: Lines of Code
          message: ${{ env.cloc_code }}

      - name: Create badge for lines of comments
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_META_DATA }}
          gistID: ${{ env.meta_gist_id }}
          filename: cloc-comments.json
          label: Comments
          message: ${{ env.cloc_comments }} (${{ env.cloc_commentpercent }}%)

      - name: Create badge for test coverage
        uses: Schneegans/dynamic-badges-action@v1.6.0
        with:
          auth: ${{ secrets.GIST_META_DATA }}
          gistID: ${{ env.meta_gist_id }}
          filename: test-coverage.json
          label: Coverage
          message: ${{ needs.test.outputs.coverage }}
